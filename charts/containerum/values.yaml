tags:
  db: false
  platform: true
  platformdb: true
  monitoring: false

ingress:
  ui:
    enabled: true
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - local.containerum.io
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  api:
    enabled: true
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - api.local.containerum.io
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local


ui:
  env:
    local:
      ## Default user country
      COUNTRY: US
      ## for HTTPS use: ssl
      API_PROTOCOL_TYPE: no-ssl
      API_PORT: ""
      LATEST_RELEASE: null
    global:
      API_HOST: api.local.containerum.io
      RECAPTCHA: null

mail:
  persistence:
    enabled: false
  env:
    local:
      USER_MANAGER_URL: null
      SMTP_PASSWORD: null
    global:
      SMTP_ADDR: null
      SMTP_LOGIN: null
      SENDER_MAIL_SIMPLE: null
      SENDER_MAIL: null


auth:
  persistence:
    enabled: false


user-manager:
  tags:
    platformdb: true
  env:
    global:
      PG_DBNAME: containerum
      PG_LOGIN: postgres
    local:
      PG_ADDR: null
      MAIL_URL: null
      AUTH_URL: null
      PERMISSIONS_URL: null
      ## if ADMIN_PASSWORD null then admin doesn't creates
      ADMIN_PASSWORD: verystrongpassword

solutions:
  tags:
    platformdb: true
  env:
    global:
      PG_DBNAME: containerum
      PG_LOGIN: postgres
    local:
      PG_ADDR: null
      PG_PASSWORD: null
      RESOURCE_URL: null
      KUBE_API_URL: null

permissions:
  tags:
    platformdb: true
  env:
    global:
      DB_BASE: containerum
      DB_USER: postgres
    local:
      DB_HOST: null
      AUTH_ADDR: null
      USER_ADDR: null
      KUBE_API_ADDR: null
      RESOURCE_SERVICE_ADDR: null
      BILLING_ADDR: null
      SOLUTIONS_ADDR: null
      VOLUME_MANAGER_ADDR: null

resource:
  tags:
    platformdb: true
  env:
    global:
      MONGO_DB: containerum
      MONGO_LOGIN: mongo
      MIN_SERVICE_PORT: 30000
      MAX_SERVICE_PORT: 32767
    local:
      MONGO_ADDR: null
      KUBE_API_ADDR: null
      PERMISSIONS_ADDR: null

nodemetrics:
  env:
    local:
      PROMETHEUS_ADDR: null

volume:
  tags:
    platformdb: true
  env:
    global:
      DB_BASE: containerum
      DB_USER: postgres
    local:
      DB_HOST: null
      KUBE_API_ADDR: null
      BILLING_ADDR: null

api-gateway:
  env:
    local:
      SERVICE_HOST_PREFIX: release-name
      GRPC_AUTH_ADDRESS: null

auth:
  persistence:
    enabled: false


kube-importer:
  rbac:
    serviceAccountName: release-name
  env:
    global:
      EXCLUDED_NS: "default,kube-system"
    local:
      RESOURCE_URL: null
      PERMISSIONS_URL: null
      VOLUMES_URL: null


kube-events:
  tags:
    platformdb: true
  rbac:
    serviceAccountName: release-name
  env:
    local:
      MONGO_ADDR: null
    global:
      MONGO_LOGIN: mongo
      MONGO_DB: containerum

events-api:
  tags:
    platformdb: true
  env:
    global:
      MONGO_DB: containerum
      MONGO_LOGIN: mongo
    local:

      MONGO_ADDR: null


postgresql:
  persistence:
    enabled: false
    existingClaim:
  postgresDatabase: containerum
  # postgresUser: postgres
  # postgresPassword: password


mongodb:
  persistence:
    enabled: false
    existingClaim:
  image:
    setPermissions: false
  mongodbDatabase: containerum
  mongodbUsername: mongo
  # mongodbPassword: password
